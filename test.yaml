version: '1.0'
stages:

- switch_context_staging
- deploy_staging
- notify_staging
- delete_unused_staging
- deploy_prod_approval
- switch_context_prod
- deploy_prod
- notify_prod
- delete_unused_prod
steps:
  
  switch_context_staging:
    title: Switching context to staging
    stage: switch_context_staging
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__cfstep-helm__3.3.1
    commands:
    - kubectl config use-context staging
  deploy_staging:
    title: Deploy to all clients - staging
    stage: deploy_staging
    fail_fast: false
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__cfstep-helm__3.3.1
    arguments:
      FOLLOW_LOGS: false
    scale:
      staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback:
        title: staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2:
        title: staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service:
        title: staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service:
        title: staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service:
        title: staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service:
        title: staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service:
        title: staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service:
        title: staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback:
        title: staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment:
        title: staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-medirevvksbh-ehr-pilot-claim-edits:
        title: staging-medirevvksbh-ehr-pilot-claim-edits
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-medirevvksbh-ehr-pilot-claim-edits_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-medirevvksbh-ehr-pilot-coding-review:
        title: staging-medirevvksbh-ehr-pilot-coding-review
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-apprentice-apprentice-video-logparser:
        title: staging-methodist-apprentice-apprentice-video-logparser
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "apprentice"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-methodist-apprentice-apprentice-video-logparser_") && "${{SOURCE_PROJECT}}" == "apprentice"
      staging-methodist-ehr-pilot-ehr-pilot-auth-status:
        title: staging-methodist-ehr-pilot-ehr-pilot-auth-status
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping:
        title: staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics:
        title: staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks:
        title: staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback:
        title: staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks:
        title: staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping:
        title: staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing:
        title: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "gv-rqa-baseline" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping:
        title: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "gv-rqa-baseline" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback:
        title: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "gv-rqa-baseline" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation:
        title: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2:
        title: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping:
        title: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse:
        title: staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg:
        title: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-methodist-ehr-pilot-rqa-alerts:
        title: staging-methodist-ehr-pilot-rqa-alerts
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback:
        title: staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2:
        title: staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback:
        title: staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-montage-ehr-pilot-auth-status:
        title: staging-montage-ehr-pilot-auth-status
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-optumdignity-ehr-pilot-credit-balances:
        title: staging-optumdignity-ehr-pilot-credit-balances
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "wfd-203-account-pending-exception" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-optumdignity-ehr-pilot-credit-balances_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-optumdignity-ehr-pilot-claim-edits-triage:
        title: staging-optumdignity-ehr-pilot-claim-edits-triage
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh:
        title: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping:
        title: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks:
        title: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest:
        title: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing:
        title: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback:
        title: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval:
        title: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks:
        title: staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching:
        title: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks:
        title: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-centricity-create-claim-batching-tasks -n staging-pennhighlands | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-centricity-create-claim-batching-tasks --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks.yml --namespace staging-pennhighlands --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-centricity-create-claim-batching-tasks ./ehr-pilot-config/charts --install --namespace staging-pennhighlands --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-shared-ehr-pilot-ehr-pilot-queue-monitor:
        title: staging-shared-ehr-pilot-ehr-pilot-queue-monitor
        commands:
        - echo hello Codefresh Runner!
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-shared-ehr-pilot-ehr-pilot-queue-monitor_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-shared-ehr-pilot-ehr-pilot-machine-manager:
        title: staging-shared-ehr-pilot-ehr-pilot-machine-manager
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-machine-manager -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-machine-manager --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-ehr-pilot-machine-manager.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-machine-manager ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-ehr-pilot-machine-manager.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-shared-ehr-pilot-ehr-pilot-machine-manager_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-shared-ehr-pilot-ehr-pilot-rpc-api:
        title: staging-shared-ehr-pilot-ehr-pilot-rpc-api
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-rpc-api -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-rpc-api --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-ehr-pilot-rpc-api.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-rpc-api ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-ehr-pilot-rpc-api.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-shared-ehr-pilot-ehr-pilot-rpc-api_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-shared-ehr-pilot-workflow-queue-monitor:
        title: staging-shared-ehr-pilot-workflow-queue-monitor
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values workflow-queue-monitor -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service workflow-queue-monitor --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-workflow-queue-monitor.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade workflow-queue-monitor ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-workflow-queue-monitor.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-shared-ehr-pilot-workflow-queue-monitor_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics:
        title: staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pipeline-metrics -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pipeline-metrics --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pipeline-metrics ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback:
        title: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback
        commands:
        - VERSION=220404-215242-dd-190-sutter-cs-ui-update-tx-inquiry-search-5bd9b18
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-writeback -n staging-sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback.yml --namespace staging-sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-writeback ./ehr-pilot-config/charts --install --namespace staging-sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest:
        title: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-csv-ingest -n staging-sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-csv-ingest --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest.yml --namespace staging-sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-csv-ingest ./ehr-pilot-config/charts --install --namespace staging-sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing:
        title: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-csv-processing -n staging-sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-csv-processing --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing.yml --namespace staging-sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-csv-processing ./ehr-pilot-config/charts --install --namespace staging-sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-sutter-ehr-pilot-denials:
        title: staging-sutter-ehr-pilot-denials
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values denials -n staging-sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service denials --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-denials.yml --namespace staging-sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade denials ./ehr-pilot-config/charts --install --namespace staging-sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-denials.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "blt-sutter-denials-2" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-sutter-ehr-pilot-denials_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-sutter-ehr-pilot-claim-edit:
        title: staging-sutter-ehr-pilot-claim-edit
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values claim-edit -n staging-sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service claim-edit --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-claim-edit.yml --namespace staging-sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade claim-edit ./ehr-pilot-config/charts --install --namespace staging-sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-claim-edit.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "ks-claim-edit-wfe" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
              featurebranch: includes("${{SOURCE_BRANCH}}", "_staging-sutter-ehr-pilot-claim-edit_") && "${{SOURCE_PROJECT}}" == "ehr-pilot"
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer:
        title: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer
        commands:
        - VERSION=220318-185844-DD-102-mc-fix-transfer-click-04acb3e
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-edit-queue-transfer -n staging-sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-edit-queue-transfer --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer.yml --namespace staging-sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-edit-queue-transfer ./ehr-pilot-config/charts --install --namespace staging-sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping:
        title: staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping
        commands:
        - VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-scraping -n staging-truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping.yml --namespace staging-truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-scraping ./ehr-pilot-config/charts --install --namespace staging-truman --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1:
        title: staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1
        commands:
        - VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-writeback1 -n staging-truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-writeback1 --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1.yml --namespace staging-truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-writeback1 ./ehr-pilot-config/charts --install --namespace staging-truman --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2:
        title: staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2
        commands:
        - VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-writeback2 -n staging-truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2.yml --namespace staging-truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-writeback2 ./ehr-pilot-config/charts --install --namespace staging-truman --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping:
        title: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping
        commands:
        - VERSION=latest-dmr-ip-to-mars
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-inpatient-notifications-scraping -n staging-truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-inpatient-notifications-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping.yml --namespace staging-truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-inpatient-notifications-scraping ./ehr-pilot-config/charts --install --namespace staging-truman --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1:
        title: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1
        commands:
        - VERSION=latest-dmr-ip-to-mars
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-inpatient-notifications-writeback1 -n staging-truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-inpatient-notifications-writeback1 --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1.yml --namespace staging-truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-inpatient-notifications-writeback1 ./ehr-pilot-config/charts --install --namespace staging-truman --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2:
        title: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2
        commands:
        - VERSION=latest-dmr-ip-to-mars
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-inpatient-notifications-writeback2 -n staging-truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-inpatient-notifications-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2.yml --namespace staging-truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-inpatient-notifications-writeback2 ./ehr-pilot-config/charts --install --namespace staging-truman --values ./ehr-pilot-config/generated_config/ehr-pilot/staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot"'
  notify_staging:
    title: nofify-staging
    stage: notify_staging
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__slack-message-sender__latest
    scale:
      staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback-success:
        title: notify-slack-staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback
            'on':
            - success
      staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback-failure:
        title: notify-slack-staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback
            'on':
            - failure
      staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2-success:
        title: notify-slack-staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2
            'on':
            - success
      staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2-failure:
        title: notify-slack-staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hea-ehr-pilot-ehr-pilot-medinfo-writeback2
            'on':
            - failure
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-success:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service
            'on':
            - success
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-failure:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service
            'on':
            - failure
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-success:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service
            'on':
            - success
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-failure:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service
            'on':
            - failure
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-success:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service
            'on':
            - success
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-failure:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service
            'on':
            - failure
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-success:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service
            'on':
            - success
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-failure:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service
            'on':
            - failure
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-success:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220615-170203-master-f4b7879 to staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service
            'on':
            - success
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-failure:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220615-170203-master-f4b7879 to staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service
            'on':
            - failure
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-success:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service
            'on':
            - success
      staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-failure:
        title: notify-slack-staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service
            'on':
            - failure
      staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-success:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220520-222617-zs-medirevv-template-hotfix-b470a7f to staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback
            'on':
            - success
      staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-failure:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220520-222617-zs-medirevv-template-hotfix-b470a7f to staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback
            'on':
            - failure
      staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-success:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-medirevv-oa23 to staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment
            'on':
            - success
      staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-failure:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-medirevv-oa23 to staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment
            'on':
            - failure
      staging-medirevvksbh-ehr-pilot-claim-edits-success:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-claim-edits-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-medirevvksbh-ehr-pilot-claim-edits ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-claim-edits
            'on':
            - success
      staging-medirevvksbh-ehr-pilot-claim-edits-failure:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-claim-edits-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-medirevvksbh-ehr-pilot-claim-edits ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-claim-edits
            'on':
            - failure
      staging-medirevvksbh-ehr-pilot-coding-review-success:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-coding-review-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220601-203430-zs-medirevv-coding-review-complete-24f2b7f to staging-medirevvksbh-ehr-pilot-coding-review ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-coding-review
            'on':
            - success
      staging-medirevvksbh-ehr-pilot-coding-review-failure:
        title: notify-slack-staging-medirevvksbh-ehr-pilot-coding-review-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220601-203430-zs-medirevv-coding-review-complete-24f2b7f to staging-medirevvksbh-ehr-pilot-coding-review ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-medirevvksbh-ehr-pilot-coding-review
            'on':
            - failure
      staging-methodist-apprentice-apprentice-video-logparser-success:
        title: notify-slack-staging-methodist-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-methodist-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-apprentice-apprentice-video-logparser
            'on':
            - success
      staging-methodist-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-staging-methodist-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-methodist-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-apprentice-apprentice-video-logparser
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-auth-status-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-173300-ms-auth-apprentice-28254d3 to staging-methodist-ehr-pilot-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-auth-status
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-auth-status-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-173300-ms-auth-apprentice-28254d3 to staging-methodist-ehr-pilot-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-auth-status
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220301-005830-claim_status_scraping-c6711cf to staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220301-005830-claim_status_scraping-c6711cf to staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-scraping
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-metrics
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220325-000805-cw-cerner-writeback-fix-2-985ad48 to staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220325-000805-cw-cerner-writeback-fix-2-985ad48 to staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-cerner-writeback
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220406-213610-ms-auth-apprentice-529f4b5 to staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220406-213610-ms-auth-apprentice-529f4b5 to staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-173300-ms-auth-apprentice-28254d3 to staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-173300-ms-auth-apprentice-28254d3 to staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-rqa-edit-writeback
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation2
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse
            'on':
            - failure
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-success:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg
            'on':
            - success
      staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-failure:
        title: notify-slack-staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg
            'on':
            - failure
      staging-methodist-ehr-pilot-rqa-alerts-success:
        title: notify-slack-staging-methodist-ehr-pilot-rqa-alerts-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220621-145010-ms-rqa-add-discharge-status-5e06d34 to staging-methodist-ehr-pilot-rqa-alerts ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-rqa-alerts
            'on':
            - success
      staging-methodist-ehr-pilot-rqa-alerts-failure:
        title: notify-slack-staging-methodist-ehr-pilot-rqa-alerts-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220621-145010-ms-rqa-add-discharge-status-5e06d34 to staging-methodist-ehr-pilot-rqa-alerts ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-methodist-ehr-pilot-rqa-alerts
            'on':
            - failure
      staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-success:
        title: notify-slack-staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220218-194308-nn-moffitt-writeback-improvements-356a904 to staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback
            'on':
            - success
      staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-failure:
        title: notify-slack-staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220218-194308-nn-moffitt-writeback-improvements-356a904 to staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback
            'on':
            - failure
      staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-success:
        title: notify-slack-staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220302-224449-nn-moffitt-validation-run-9341ca6 to staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2
            'on':
            - success
      staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-failure:
        title: notify-slack-staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220302-224449-nn-moffitt-validation-run-9341ca6 to staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2
            'on':
            - failure
      staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-success:
        title: notify-slack-staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback
            'on':
            - success
      staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-failure:
        title: notify-slack-staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback
            'on':
            - failure
      staging-montage-ehr-pilot-auth-status-success:
        title: notify-slack-staging-montage-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-191126-1198-config-updates-and-bugfixes-b4e8bad to staging-montage-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-montage-ehr-pilot-auth-status
            'on':
            - success
      staging-montage-ehr-pilot-auth-status-failure:
        title: notify-slack-staging-montage-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-191126-1198-config-updates-and-bugfixes-b4e8bad to staging-montage-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-montage-ehr-pilot-auth-status
            'on':
            - failure
      staging-optumdignity-ehr-pilot-credit-balances-success:
        title: notify-slack-staging-optumdignity-ehr-pilot-credit-balances-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-optumdignity-ehr-pilot-credit-balances ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-optumdignity-ehr-pilot-credit-balances
            'on':
            - success
      staging-optumdignity-ehr-pilot-credit-balances-failure:
        title: notify-slack-staging-optumdignity-ehr-pilot-credit-balances-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-optumdignity-ehr-pilot-credit-balances ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-optumdignity-ehr-pilot-credit-balances
            'on':
            - failure
      staging-optumdignity-ehr-pilot-claim-edits-triage-success:
        title: notify-slack-staging-optumdignity-ehr-pilot-claim-edits-triage-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220621-185328-wfd-24-optum-dignity-claim-edit-triage-prep-for-vnc-validation-404beed to staging-optumdignity-ehr-pilot-claim-edits-triage ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-optumdignity-ehr-pilot-claim-edits-triage
            'on':
            - success
      staging-optumdignity-ehr-pilot-claim-edits-triage-failure:
        title: notify-slack-staging-optumdignity-ehr-pilot-claim-edits-triage-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220621-185328-wfd-24-optum-dignity-claim-edit-triage-prep-for-vnc-validation-404beed to staging-optumdignity-ehr-pilot-claim-edits-triage ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-optumdignity-ehr-pilot-claim-edits-triage
            'on':
            - failure
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh-success:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220310-213117-zs-parallon-account-refresh-f7a40fd to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh
            'on':
            - success
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh-failure:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220310-213117-zs-parallon-account-refresh-f7a40fd to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-account-refresh
            'on':
            - failure
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-success:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping
            'on':
            - success
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-failure:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping
            'on':
            - failure
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-success:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks
            'on':
            - success
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-failure:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks
            'on':
            - failure
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-success:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest
            'on':
            - success
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-failure:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest
            'on':
            - failure
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-success:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing
            'on':
            - success
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-failure:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing
            'on':
            - failure
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-success:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback
            'on':
            - success
      staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-failure:
        title: notify-slack-staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback
            'on':
            - failure
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-success:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220322-171353-DD-282-phh-ph-family-medicine-hawkins-into-our-logic-for-charge-retrieval-653e58e to staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval
            'on':
            - success
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-failure:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220322-171353-DD-282-phh-ph-family-medicine-hawkins-into-our-logic-for-charge-retrieval-653e58e to staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval
            'on':
            - failure
      staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-success:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks
            'on':
            - success
      staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-failure:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks
            'on':
            - failure
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching-success:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching
            'on':
            - success
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching-failure:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-claim-batching
            'on':
            - failure
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks-success:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks
            'on':
            - success
      staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks-failure:
        title: notify-slack-staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-pennhighlands-ehr-pilot-ehr-pilot-centricity-create-claim-batching-tasks
            'on':
            - failure
      staging-shared-ehr-pilot-ehr-pilot-queue-monitor-success:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-queue-monitor
            'on':
            - success
      staging-shared-ehr-pilot-ehr-pilot-queue-monitor-failure:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-queue-monitor
            'on':
            - failure
      staging-shared-ehr-pilot-ehr-pilot-machine-manager-success:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-machine-manager-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-machine-manager ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-machine-manager
            'on':
            - success
      staging-shared-ehr-pilot-ehr-pilot-machine-manager-failure:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-machine-manager-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-machine-manager ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-machine-manager
            'on':
            - failure
      staging-shared-ehr-pilot-ehr-pilot-rpc-api-success:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-rpc-api-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-rpc-api ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-rpc-api
            'on':
            - success
      staging-shared-ehr-pilot-ehr-pilot-rpc-api-failure:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-rpc-api-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-rpc-api ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-rpc-api
            'on':
            - failure
      staging-shared-ehr-pilot-workflow-queue-monitor-success:
        title: notify-slack-staging-shared-ehr-pilot-workflow-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-shared-ehr-pilot-workflow-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-workflow-queue-monitor
            'on':
            - success
      staging-shared-ehr-pilot-workflow-queue-monitor-failure:
        title: notify-slack-staging-shared-ehr-pilot-workflow-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-shared-ehr-pilot-workflow-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-workflow-queue-monitor
            'on':
            - failure
      staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics-success:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics
            'on':
            - success
      staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics-failure:
        title: notify-slack-staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-shared-ehr-pilot-ehr-pilot-pipeline-metrics
            'on':
            - failure
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-success:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220404-215242-dd-190-sutter-cs-ui-update-tx-inquiry-search-5bd9b18 to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback
            'on':
            - success
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-failure:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220404-215242-dd-190-sutter-cs-ui-update-tx-inquiry-search-5bd9b18 to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback
            'on':
            - failure
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-success:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest
            'on':
            - success
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-failure:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest
            'on':
            - failure
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-success:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing
            'on':
            - success
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-failure:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing
            'on':
            - failure
      staging-sutter-ehr-pilot-denials-success:
        title: notify-slack-staging-sutter-ehr-pilot-denials-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-sutter-ehr-pilot-denials ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-denials
            'on':
            - success
      staging-sutter-ehr-pilot-denials-failure:
        title: notify-slack-staging-sutter-ehr-pilot-denials-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-sutter-ehr-pilot-denials ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-denials
            'on':
            - failure
      staging-sutter-ehr-pilot-claim-edit-success:
        title: notify-slack-staging-sutter-ehr-pilot-claim-edit-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to staging-sutter-ehr-pilot-claim-edit ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-claim-edit
            'on':
            - success
      staging-sutter-ehr-pilot-claim-edit-failure:
        title: notify-slack-staging-sutter-ehr-pilot-claim-edit-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to staging-sutter-ehr-pilot-claim-edit ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-claim-edit
            'on':
            - failure
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-success:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220318-185844-DD-102-mc-fix-transfer-click-04acb3e to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer
            'on':
            - success
      staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-failure:
        title: notify-slack-staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220318-185844-DD-102-mc-fix-transfer-click-04acb3e to staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer
            'on':
            - failure
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-success:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure to staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping
            'on':
            - success
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-failure:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure to staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-prior-auth-scraping
            'on':
            - failure
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-success:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure to staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1
            'on':
            - success
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-failure:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure to staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1
            'on':
            - failure
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-success:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure to staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2
            'on':
            - success
      staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-failure:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jhw-truman-priorauth-create_webqc_task_on_failure to staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2
            'on':
            - failure
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-success:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-dmr-ip-to-mars to staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping
            'on':
            - success
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-failure:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-dmr-ip-to-mars to staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping
            'on':
            - failure
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-success:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-dmr-ip-to-mars to staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1
            'on':
            - success
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-failure:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-dmr-ip-to-mars to staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1
            'on':
            - failure
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-success:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-dmr-ip-to-mars to staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2
            'on':
            - success
      staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-failure:
        title: notify-slack-staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-dmr-ip-to-mars to staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: staging-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2
            'on':
            - failure
  delete_unused_staging:
    title: delete_unused_staging
    stage: delete_unused_staging
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__cfstep-helm__3.3.1
    environment:
    - 'EXCLUDE_LIVE_SERVICES=| select(.name != "ehr-pilot-medinfo-writeback" or .namespace != "staging-hea") | select(.name != "ehr-pilot-medinfo-writeback2" or .namespace != "staging-hea") | select(.name != "ehr-pilot-pb-cs-scraping-service" or .namespace != "staging-hss") | select(.name != "ehr-pilot-pb-cs-scraping-tasks-service" or .namespace != "staging-hss") | select(.name != "ehr-pilot-pb-cs-csv-ingest-service" or .namespace != "staging-hss") | select(.name != "ehr-pilot-pb-cs-csv-process-service" or .namespace != "staging-hss") | select(.name != "ehr-pilot-pb-cs-writeback-service" or .namespace != "staging-hss") | select(.name != "ehr-pilot-pb-cs-query-deferred-claims-service" or .namespace != "staging-hss") | select(.name != "ehr-pilot-medirevvksbh-claim-status-writeback" or .namespace != "staging-medirevvksbh") | select(.name != "ehr-pilot-medirevvksbh-oa23-denial-adjustment" or .namespace != "staging-medirevvksbh") | select(.name != "claim-edits" or .namespace != "staging-medirevvksbh") | select(.name != "coding-review" or .namespace != "staging-medirevvksbh") | select(.name != "apprentice-video-logparser" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-auth-status" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-cerner-scraping" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-cerner-metrics" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-cerner-claim-status-scraping-tasks" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-cerner-writeback" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-auth-booking-scraping-tasks" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-auth-booking-scraping" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-rqa-edit-task-processing" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-rqa-edit-scraping" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-rqa-edit-writeback" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-eligibility-denials-task-creation" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-eligibility-denials-task-creation2" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-eligibility-denials-scraping" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-elig-denials-create-task-reimburse" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-eligibility-denials-scraping-reg" or .namespace != "staging-methodist") | select(.name != "rqa-alerts" or .namespace != "staging-methodist") | select(.name != "ehr-pilot-soarian-claim-status-writeback" or .namespace != "staging-moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback2" or .namespace != "staging-moffitt") | select(.name != "ehr-pilot-montage-claim-status-csv-writeback" or .namespace != "staging-montage") | select(.name != "auth-status" or .namespace != "staging-montage") | select(.name != "credit-balances" or .namespace != "staging-optumdignity") | select(.name != "claim-edits-triage" or .namespace != "staging-optumdignity") | select(.name != "ehr-pilot-artiva-account-refresh" or .namespace != "staging-parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-scraping" or .namespace != "staging-parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-scraping-tasks" or .namespace != "staging-parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-csv-ingest" or .namespace != "staging-parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-csv-processing" or .namespace != "staging-parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback" or .namespace != "staging-parallonhca") | select(.name != "ehr-pilot-centricity-charge-retrieval" or .namespace != "staging-pennhighlands") | select(.name != "ehr-pilot-create-charge-retrieval-tasks" or .namespace != "staging-pennhighlands") | select(.name != "ehr-pilot-centricity-claim-batching" or .namespace != "staging-pennhighlands") | select(.name != "ehr-pilot-centricity-create-claim-batching-tasks"
      or .namespace != "staging-pennhighlands") | select(.name != "ehr-pilot-queue-monitor" or .namespace != "shared") | select(.name != "ehr-pilot-machine-manager" or .namespace != "shared") | select(.name != "ehr-pilot-rpc-api" or .namespace != "shared") | select(.name != "workflow-queue-monitor" or .namespace != "shared") | select(.name != "ehr-pilot-pipeline-metrics" or .namespace != "shared") | select(.name != "ehr-pilot-epic-claim-status-writeback" or .namespace != "staging-sutter") | select(.name != "ehr-pilot-epic-claim-status-csv-ingest" or .namespace != "staging-sutter") | select(.name != "ehr-pilot-epic-claim-status-csv-processing" or .namespace != "staging-sutter") | select(.name != "denials" or .namespace != "staging-sutter") | select(.name != "claim-edit" or .namespace != "staging-sutter") | select(.name != "ehr-pilot-epic-claim-edit-queue-transfer" or .namespace != "staging-sutter") | select(.name != "ehr-pilot-prior-auth-scraping" or .namespace != "staging-truman") | select(.name != "ehr-pilot-prior-auth-writeback1" or .namespace != "staging-truman") | select(.name != "ehr-pilot-prior-auth-writeback2" or .namespace != "staging-truman") | select(.name != "ehr-pilot-inpatient-notifications-scraping" or .namespace != "staging-truman") | select(.name != "ehr-pilot-inpatient-notifications-writeback1" or .namespace != "staging-truman") | select(.name != "ehr-pilot-inpatient-notifications-writeback2" or .namespace != "staging-truman") '
    commands:
    - kubectl config use-context staging
    - helm list -A -o json | jq ".[] | select(.chart == \"kolony-0.1.0\") $EXCLUDE_LIVE_SERVICES | \"helm delete --namespace=\(.namespace) \(.name)\"" -r > delete.sh
    - cat delete.sh
  deploy_prod_approval:
    title: Approve Prod Deploy
    stage: deploy_prod_approval
    type: pending-approval
    description: Step description
    fail_fast: false
    timeout:
      duration: 168
      finalState: terminated
    when:
      condition:
        all:
          do_prod_deploy: '"${{INCLUDE_PROD_DEPLOY_WITH_APPROVAL}}" == "true"'
  switch_context_prod:
    title: Switching context to prod
    stage: switch_context_staging
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__cfstep-helm__3.3.1
    commands:
    - kubectl config use-context prod
  deploy_prod:
    title: Deploy to all clients - Prod
    stage: deploy_prod
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__cfstep-helm__3.3.1
    fail_fast: false
    arguments:
      FOLLOW_LOGS: false
    scale:
      prod-baptist-apprentice-apprentice-video-create:
        title: prod-baptist-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n baptist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-baptist-apprentice-apprentice-video-create.yml --namespace baptist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace baptist --values ./ehr-pilot-config/generated_config/apprentice/prod-baptist-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-baptist-apprentice-apprentice-video-logparser:
        title: prod-baptist-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n baptist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-baptist-apprentice-apprentice-video-logparser.yml --namespace baptist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace baptist --values ./ehr-pilot-config/generated_config/apprentice/prod-baptist-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-baptist-apprentice-apprentice-video-ingest:
        title: prod-baptist-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n baptist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-baptist-apprentice-apprentice-video-ingest.yml --namespace baptist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace baptist --values ./ehr-pilot-config/generated_config/apprentice/prod-baptist-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-davita-apprentice-apprentice-video-create:
        title: prod-davita-apprentice-apprentice-video-create
        commands:
        - VERSION=200331-213245-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n davita | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-davita-apprentice-apprentice-video-create.yml --namespace davita --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace davita --values ./ehr-pilot-config/generated_config/apprentice/prod-davita-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-davita-apprentice-apprentice-video-logparser:
        title: prod-davita-apprentice-apprentice-video-logparser
        commands:
        - VERSION=200323-221842-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n davita | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-davita-apprentice-apprentice-video-logparser.yml --namespace davita --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace davita --values ./ehr-pilot-config/generated_config/apprentice/prod-davita-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-davita-apprentice-apprentice-video-ingest:
        title: prod-davita-apprentice-apprentice-video-ingest
        commands:
        - VERSION=200323-221842-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n davita | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-davita-apprentice-apprentice-video-ingest.yml --namespace davita --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace davita --values ./ehr-pilot-config/generated_config/apprentice/prod-davita-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-hea-apprentice-apprentice-video-create:
        title: prod-hea-apprentice-apprentice-video-create
        commands:
        - VERSION=210108-222316-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n hea | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-hea-apprentice-apprentice-video-create.yml --namespace hea --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace hea --values ./ehr-pilot-config/generated_config/apprentice/prod-hea-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-hea-apprentice-apprentice-video-logparser:
        title: prod-hea-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210108-222316-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n hea | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-hea-apprentice-apprentice-video-logparser.yml --namespace hea --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace hea --values ./ehr-pilot-config/generated_config/apprentice/prod-hea-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-hea-apprentice-apprentice-video-ingest:
        title: prod-hea-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210108-222316-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n hea | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-hea-apprentice-apprentice-video-ingest.yml --namespace hea --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace hea --values ./ehr-pilot-config/generated_config/apprentice/prod-hea-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback:
        title: prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-medinfo-writeback -n hea | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-medinfo-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback.yml --namespace hea --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-medinfo-writeback ./ehr-pilot-config/charts --install --namespace hea --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service
        commands:
        - VERSION=220616-161201-master-619775c
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-scraping-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-scraping-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-scraping-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service
        commands:
        - VERSION=220616-161201-master-619775c
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-scraping2-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-scraping2-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-scraping2-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-scraping-tasks-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-scraping-tasks-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-scraping-tasks-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-csv-ingest-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-csv-ingest-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-csv-ingest-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-csv-process-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-csv-process-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-csv-process-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service
        commands:
        - VERSION=220616-161201-master-619775c
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-writeback-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-writeback-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-writeback-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service
        commands:
        - VERSION=220616-161201-master-619775c
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-writeback2-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-writeback2-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-writeback2-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service
        commands:
        - VERSION=220616-161201-master-619775c
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-writeback3-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-writeback3-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-writeback3-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service
        commands:
        - VERSION=220616-161201-master-619775c
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-writeback4-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-writeback4-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-writeback4-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service:
        title: prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-pb-cs-query-deferred-claims-service -n hss | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-pb-cs-query-deferred-claims-service --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service.yml --namespace hss --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-pb-cs-query-deferred-claims-service ./ehr-pilot-config/charts --install --namespace hss --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-medequip-apprentice-apprentice-video-create:
        title: prod-medequip-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n medequip | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-medequip-apprentice-apprentice-video-create.yml --namespace medequip --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace medequip --values ./ehr-pilot-config/generated_config/apprentice/prod-medequip-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-medequip-apprentice-apprentice-video-logparser:
        title: prod-medequip-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n medequip | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-medequip-apprentice-apprentice-video-logparser.yml --namespace medequip --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace medequip --values ./ehr-pilot-config/generated_config/apprentice/prod-medequip-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-medequip-apprentice-apprentice-video-ingest:
        title: prod-medequip-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n medequip | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-medequip-apprentice-apprentice-video-ingest.yml --namespace medequip --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace medequip --values ./ehr-pilot-config/generated_config/apprentice/prod-medequip-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-medirevvksbh-apprentice-apprentice-video-create:
        title: prod-medirevvksbh-apprentice-apprentice-video-create
        commands:
        - VERSION=200331-213245-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n medirevvksbh | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-medirevvksbh-apprentice-apprentice-video-create.yml --namespace medirevvksbh --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace medirevvksbh --values ./ehr-pilot-config/generated_config/apprentice/prod-medirevvksbh-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-medirevvksbh-apprentice-apprentice-video-logparser:
        title: prod-medirevvksbh-apprentice-apprentice-video-logparser
        commands:
        - VERSION=200323-221842-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n medirevvksbh | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-medirevvksbh-apprentice-apprentice-video-logparser.yml --namespace medirevvksbh --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace medirevvksbh --values ./ehr-pilot-config/generated_config/apprentice/prod-medirevvksbh-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-medirevvksbh-apprentice-apprentice-video-ingest:
        title: prod-medirevvksbh-apprentice-apprentice-video-ingest
        commands:
        - VERSION=200323-221842-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n medirevvksbh | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-medirevvksbh-apprentice-apprentice-video-ingest.yml --namespace medirevvksbh --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace medirevvksbh --values ./ehr-pilot-config/generated_config/apprentice/prod-medirevvksbh-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback:
        title: prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-medirevvksbh-claim-status-writeback -n medirevvksbh | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-medirevvksbh-claim-status-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback.yml --namespace medirevvksbh --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-medirevvksbh-claim-status-writeback ./ehr-pilot-config/charts --install --namespace medirevvksbh --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment:
        title: prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment
        commands:
        - VERSION=220509-181534-av-medirevv-oa23-service-a5e3a5e
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-medirevvksbh-oa23-denial-adjustment -n medirevvksbh | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-medirevvksbh-oa23-denial-adjustment --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment.yml --namespace medirevvksbh --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-medirevvksbh-oa23-denial-adjustment ./ehr-pilot-config/charts --install --namespace medirevvksbh --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-medirevvksbh-ehr-pilot-claim-edits:
        title: prod-medirevvksbh-ehr-pilot-claim-edits
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values claim-edits -n medirevvksbh | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service claim-edits --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-medirevvksbh-ehr-pilot-claim-edits.yml --namespace medirevvksbh --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade claim-edits ./ehr-pilot-config/charts --install --namespace medirevvksbh --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-medirevvksbh-ehr-pilot-claim-edits.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-apprentice-apprentice-video-create:
        title: prod-methodist-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-create.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-apprentice-apprentice-video-logparser:
        title: prod-methodist-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-logparser.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-apprentice-apprentice-video-ingest:
        title: prod-methodist-apprentice-apprentice-video-ingest
        commands:
        - VERSION=200323-221842-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-ingest.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-apprentice-apprentice-video-create-internal:
        title: prod-methodist-apprentice-apprentice-video-create-internal
        commands:
        - VERSION=210108-215106-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create-internal -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create-internal --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-create-internal.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create-internal ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-create-internal.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-apprentice-apprentice-video-logparser-internal:
        title: prod-methodist-apprentice-apprentice-video-logparser-internal
        commands:
        - VERSION=210108-222316-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser-internal -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser-internal --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-logparser-internal.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser-internal ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-logparser-internal.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-apprentice-apprentice-video-ingest-internal:
        title: prod-methodist-apprentice-apprentice-video-ingest-internal
        commands:
        - VERSION=210108-215106-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest-internal -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest-internal --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-ingest-internal.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest-internal ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/apprentice/prod-methodist-apprentice-apprentice-video-ingest-internal.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping
        commands:
        - VERSION=220616-173300-ms-auth-apprentice-28254d3
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-booking-scraping -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-booking-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-booking-scraping ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2
        commands:
        - VERSION=220616-173300-ms-auth-apprentice-28254d3
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-booking-scraping2 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-booking-scraping2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-booking-scraping2 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks
        commands:
        - VERSION=220406-213610-ms-auth-apprentice-529f4b5
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-booking-scraping-tasks -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-booking-scraping-tasks --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-booking-scraping-tasks ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-metrics -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-metrics --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-metrics ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping
        commands:
        - VERSION=220408-213638-cerner-patient-account-hotfix-62ad858
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-scraping -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-scraping ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2
        commands:
        - VERSION=220408-213638-cerner-patient-account-hotfix-62ad858
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-scraping2 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-scraping2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-scraping2 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback
        commands:
        - VERSION=220414-212418-master-b697d5d
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-writeback -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-writeback ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2
        commands:
        - VERSION=220414-212418-master-b697d5d
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-writeback2 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-writeback2 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-claim-status-scraping-tasks -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-claim-status-scraping-tasks --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-claim-status-scraping-tasks ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-mid-cycle-edits-newborn-timely -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-mid-cycle-edits-newborn-timely --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-mid-cycle-edits-newborn-timely ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-mid-cycle-edits-physician -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-mid-cycle-edits-physician --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-mid-cycle-edits-physician ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status2:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status2
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status2 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status2.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status2 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status3:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status3
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status3 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status3 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status3.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status3 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status3.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status4:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status4
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status4 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status4 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status4.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status4 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status4.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status5:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status5
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status5 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status5 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status5.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status5 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status5.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status6:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status6
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status6 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status6 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status6.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status6 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status6.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status7:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status7
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status7 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status7 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status7.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status7 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status7.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-auth-status8:
        title: prod-methodist-ehr-pilot-ehr-pilot-auth-status8
        commands:
        - VERSION=220617-183929-ms-auth-apprentice-59072a0
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-auth-status8 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-auth-status8 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status8.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-auth-status8 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-auth-status8.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping:
        title: prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping
        commands:
        - VERSION=220421-164358-gv-rqa-baseline-7ee517b
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-rqa-edit-scraping -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-rqa-edit-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-rqa-edit-scraping ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing:
        title: prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing
        commands:
        - VERSION=220223-233444-gv-rqa-baseline-42b1ec4
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-rqa-edit-task-processing -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-rqa-edit-task-processing --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-rqa-edit-task-processing ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg:
        title: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg
        commands:
        - VERSION=latest-jw-mhs-denials-updates
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-eligibility-denials-scraping-reg -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-eligibility-denials-scraping-reg --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-eligibility-denials-scraping-reg ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement:
        title: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement
        commands:
        - VERSION=latest-jw-mhs-denials-updates
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-eligibility-denials-scraping-reimbursement -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-eligibility-denials-scraping-reimbursement --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-eligibility-denials-scraping-reimbursement ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg:
        title: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg
        commands:
        - VERSION=latest-jw-mhs-denials-updates
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-eligibility-denials-task-creation-reg -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-eligibility-denials-task-creation-reg --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-eligibility-denials-task-creation-reg ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2:
        title: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2
        commands:
        - VERSION=latest-jw-mhs-denials-updates
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-eligibility-denials-task-creation-reg2 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-eligibility-denials-task-creation-reg2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-eligibility-denials-task-creation-reg2 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse:
        title: prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse
        commands:
        - VERSION=latest-jw-mhs-denials-updates
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-elig-denials-create-task-reimburse -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-elig-denials-create-task-reimburse --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-elig-denials-create-task-reimburse ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2:
        title: prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2
        commands:
        - VERSION=latest-jw-mhs-denials-updates
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-elig-denials-create-task-reimburse2 -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-elig-denials-create-task-reimburse2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-elig-denials-create-task-reimburse2 ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-rqa-alerts:
        title: prod-methodist-ehr-pilot-rqa-alerts
        commands:
        - VERSION=220614-204909-ms-rqa-add-discharge-status-1c38c22
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values rqa-alerts -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service rqa-alerts --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-rqa-alerts.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade rqa-alerts ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-rqa-alerts.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-queue-monitoring -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-queue-monitoring --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-queue-monitoring ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal:
        title: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-cerner-mid-cycle-edits-prenatal -n methodist | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-cerner-mid-cycle-edits-prenatal --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal.yml --namespace methodist --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-cerner-mid-cycle-edits-prenatal ./ehr-pilot-config/charts --install --namespace methodist --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-apprentice-apprentice-video-create:
        title: prod-moffitt-apprentice-apprentice-video-create
        commands:
        - VERSION=210108-222316-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-moffitt-apprentice-apprentice-video-create.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/apprentice/prod-moffitt-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-apprentice-apprentice-video-logparser:
        title: prod-moffitt-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210108-222316-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-moffitt-apprentice-apprentice-video-logparser.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/apprentice/prod-moffitt-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-apprentice-apprentice-video-ingest:
        title: prod-moffitt-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210108-222316-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-moffitt-apprentice-apprentice-video-ingest.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/apprentice/prod-moffitt-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback:
        title: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-soarian-claim-status-writeback -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-soarian-claim-status-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-soarian-claim-status-writeback ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2:
        title: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-soarian-claim-status-writeback2 -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-soarian-claim-status-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-soarian-claim-status-writeback2 ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3:
        title: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-soarian-claim-status-writeback3 -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-soarian-claim-status-writeback3 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-soarian-claim-status-writeback3 ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4:
        title: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-soarian-claim-status-writeback4 -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-soarian-claim-status-writeback4 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-soarian-claim-status-writeback4 ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5:
        title: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-soarian-claim-status-writeback5 -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-soarian-claim-status-writeback5 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-soarian-claim-status-writeback5 ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6:
        title: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-soarian-claim-status-writeback6 -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-soarian-claim-status-writeback6 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-soarian-claim-status-writeback6 ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7:
        title: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-soarian-claim-status-writeback7 -n moffitt | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-soarian-claim-status-writeback7 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7.yml --namespace moffitt --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-soarian-claim-status-writeback7 ./ehr-pilot-config/charts --install --namespace moffitt --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback:
        title: prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-montage-claim-status-csv-writeback -n montage | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-montage-claim-status-csv-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback.yml --namespace montage --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-montage-claim-status-csv-writeback ./ehr-pilot-config/charts --install --namespace montage --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-montage-ehr-pilot-auth-status:
        title: prod-montage-ehr-pilot-auth-status
        commands:
        - VERSION=220602-230858-master-df185ab
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values auth-status -n montage | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service auth-status --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-montage-ehr-pilot-auth-status.yml --namespace montage --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade auth-status ./ehr-pilot-config/charts --install --namespace montage --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-montage-ehr-pilot-auth-status.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-optumdignity-apprentice-apprentice-video-create:
        title: prod-optumdignity-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n optumdignity | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-optumdignity-apprentice-apprentice-video-create.yml --namespace optumdignity --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace optumdignity --values ./ehr-pilot-config/generated_config/apprentice/prod-optumdignity-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-optumdignity-apprentice-apprentice-video-logparser:
        title: prod-optumdignity-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n optumdignity | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-optumdignity-apprentice-apprentice-video-logparser.yml --namespace optumdignity --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace optumdignity --values ./ehr-pilot-config/generated_config/apprentice/prod-optumdignity-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-optumdignity-apprentice-apprentice-video-ingest:
        title: prod-optumdignity-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n optumdignity | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-optumdignity-apprentice-apprentice-video-ingest.yml --namespace optumdignity --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace optumdignity --values ./ehr-pilot-config/generated_config/apprentice/prod-optumdignity-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-apprentice-apprentice-video-create:
        title: prod-parallonhca-apprentice-apprentice-video-create
        commands:
        - VERSION=201105-223329-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-parallonhca-apprentice-apprentice-video-create.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/apprentice/prod-parallonhca-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-apprentice-apprentice-video-logparser:
        title: prod-parallonhca-apprentice-apprentice-video-logparser
        commands:
        - VERSION=201105-223329-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-parallonhca-apprentice-apprentice-video-logparser.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/apprentice/prod-parallonhca-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-apprentice-apprentice-video-ingest:
        title: prod-parallonhca-apprentice-apprentice-video-ingest
        commands:
        - VERSION=201105-223329-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-parallonhca-apprentice-apprentice-video-ingest.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/apprentice/prod-parallonhca-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-scraping -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-scraping ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-scraping-tasks -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-scraping-tasks --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-scraping-tasks ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-csv-ingest -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-csv-ingest --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-csv-ingest ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-csv-processing -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-csv-processing --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-csv-processing ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback2 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback2 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback3 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback3 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback3 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback4 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback4 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback4 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback5 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback5 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback5 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback6 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback6 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback6 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback7 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback7 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback7 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback8 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback8 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback8 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback9 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback9 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback9 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10:
        title: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-artiva-claim-status-writeback10 -n parallonhca | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-artiva-claim-status-writeback10 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10.yml --namespace parallonhca --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-artiva-claim-status-writeback10 ./ehr-pilot-config/charts --install --namespace parallonhca --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval:
        title: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-centricity-charge-retrieval -n pennhighlands | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-centricity-charge-retrieval --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval.yml --namespace pennhighlands --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-centricity-charge-retrieval ./ehr-pilot-config/charts --install --namespace pennhighlands --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2:
        title: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-centricity-charge-retrieval2 -n pennhighlands | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-centricity-charge-retrieval2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2.yml --namespace pennhighlands --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-centricity-charge-retrieval2 ./ehr-pilot-config/charts --install --namespace pennhighlands --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3:
        title: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-centricity-charge-retrieval3 -n pennhighlands | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-centricity-charge-retrieval3 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3.yml --namespace pennhighlands --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-centricity-charge-retrieval3 ./ehr-pilot-config/charts --install --namespace pennhighlands --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4:
        title: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-centricity-charge-retrieval4 -n pennhighlands | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-centricity-charge-retrieval4 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4.yml --namespace pennhighlands --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-centricity-charge-retrieval4 ./ehr-pilot-config/charts --install --namespace pennhighlands --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks:
        title: prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-create-charge-retrieval-tasks -n pennhighlands | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-create-charge-retrieval-tasks --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks.yml --namespace pennhighlands --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-create-charge-retrieval-tasks ./ehr-pilot-config/charts --install --namespace pennhighlands --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-pmscvmc-apprentice-apprentice-video-create:
        title: prod-pmscvmc-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n pmscvmc | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-pmscvmc-apprentice-apprentice-video-create.yml --namespace pmscvmc --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace pmscvmc --values ./ehr-pilot-config/generated_config/apprentice/prod-pmscvmc-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmscvmc-apprentice-apprentice-video-logparser:
        title: prod-pmscvmc-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n pmscvmc | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-pmscvmc-apprentice-apprentice-video-logparser.yml --namespace pmscvmc --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace pmscvmc --values ./ehr-pilot-config/generated_config/apprentice/prod-pmscvmc-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmscvmc-apprentice-apprentice-video-ingest:
        title: prod-pmscvmc-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n pmscvmc | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-pmscvmc-apprentice-apprentice-video-ingest.yml --namespace pmscvmc --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace pmscvmc --values ./ehr-pilot-config/generated_config/apprentice/prod-pmscvmc-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmskaiser-apprentice-apprentice-video-create:
        title: prod-pmskaiser-apprentice-apprentice-video-create
        commands:
        - VERSION=200331-213245-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n pmskaiser | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-pmskaiser-apprentice-apprentice-video-create.yml --namespace pmskaiser --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace pmskaiser --values ./ehr-pilot-config/generated_config/apprentice/prod-pmskaiser-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmskaiser-apprentice-apprentice-video-logparser:
        title: prod-pmskaiser-apprentice-apprentice-video-logparser
        commands:
        - VERSION=200323-221842-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n pmskaiser | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-pmskaiser-apprentice-apprentice-video-logparser.yml --namespace pmskaiser --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace pmskaiser --values ./ehr-pilot-config/generated_config/apprentice/prod-pmskaiser-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmskaiser-apprentice-apprentice-video-ingest:
        title: prod-pmskaiser-apprentice-apprentice-video-ingest
        commands:
        - VERSION=200323-221842-branch-multithreaded-processing
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n pmskaiser | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-pmskaiser-apprentice-apprentice-video-ingest.yml --namespace pmskaiser --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace pmskaiser --values ./ehr-pilot-config/generated_config/apprentice/prod-pmskaiser-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmsohiostate-apprentice-apprentice-video-create:
        title: prod-pmsohiostate-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n pmsohiostate | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-pmsohiostate-apprentice-apprentice-video-create.yml --namespace pmsohiostate --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace pmsohiostate --values ./ehr-pilot-config/generated_config/apprentice/prod-pmsohiostate-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmsohiostate-apprentice-apprentice-video-logparser:
        title: prod-pmsohiostate-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n pmsohiostate | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-pmsohiostate-apprentice-apprentice-video-logparser.yml --namespace pmsohiostate --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace pmsohiostate --values ./ehr-pilot-config/generated_config/apprentice/prod-pmsohiostate-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-pmsohiostate-apprentice-apprentice-video-ingest:
        title: prod-pmsohiostate-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n pmsohiostate | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-pmsohiostate-apprentice-apprentice-video-ingest.yml --namespace pmsohiostate --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace pmsohiostate --values ./ehr-pilot-config/generated_config/apprentice/prod-pmsohiostate-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-shared-ehr-pilot-ehr-pilot-queue-monitor:
        title: prod-shared-ehr-pilot-ehr-pilot-queue-monitor
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-queue-monitor -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-queue-monitor --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-ehr-pilot-queue-monitor.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-queue-monitor ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-ehr-pilot-queue-monitor.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-shared-ehr-pilot-ehr-pilot-machine-manager:
        title: prod-shared-ehr-pilot-ehr-pilot-machine-manager
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-machine-manager -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-machine-manager --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-ehr-pilot-machine-manager.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-machine-manager ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-ehr-pilot-machine-manager.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-shared-ehr-pilot-ehr-pilot-rpc-api:
        title: prod-shared-ehr-pilot-ehr-pilot-rpc-api
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-rpc-api -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-rpc-api --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-ehr-pilot-rpc-api.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-rpc-api ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-ehr-pilot-rpc-api.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-shared-ehr-pilot-workflow-queue-monitor:
        title: prod-shared-ehr-pilot-workflow-queue-monitor
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values workflow-queue-monitor -n shared | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service workflow-queue-monitor --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-workflow-queue-monitor.yml --namespace shared --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade workflow-queue-monitor ./ehr-pilot-config/charts --install --namespace shared --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-shared-ehr-pilot-workflow-queue-monitor.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-signature-apprentice-apprentice-video-create:
        title: prod-signature-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n signature | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-signature-apprentice-apprentice-video-create.yml --namespace signature --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace signature --values ./ehr-pilot-config/generated_config/apprentice/prod-signature-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-signature-apprentice-apprentice-video-logparser:
        title: prod-signature-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n signature | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-signature-apprentice-apprentice-video-logparser.yml --namespace signature --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace signature --values ./ehr-pilot-config/generated_config/apprentice/prod-signature-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-signature-apprentice-apprentice-video-ingest:
        title: prod-signature-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n signature | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-signature-apprentice-apprentice-video-ingest.yml --namespace signature --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace signature --values ./ehr-pilot-config/generated_config/apprentice/prod-signature-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-writeback -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-writeback --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-writeback ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-writeback2 -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-writeback2 ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-writeback3 -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-writeback3 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-writeback3 ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-writeback5 -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-writeback5 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-writeback5 ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-csv-ingest -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-csv-ingest --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-csv-ingest ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-status-csv-processing -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-status-csv-processing --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-status-csv-processing ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-edit-metrics -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-edit-metrics --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-edit-metrics ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-edit-queue-transfer -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-edit-queue-transfer --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-edit-queue-transfer ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend
        commands:
        - VERSION=220615-181130-blt-claim-edits-asynciofix-9c1d821
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-edit-frontend -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-edit-frontend --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-edit-frontend ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend:
        title: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend
        commands:
        - VERSION=220615-181130-blt-claim-edits-asynciofix-9c1d821
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-epic-claim-edit-backend -n sutter | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-epic-claim-edit-backend --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend.yml --namespace sutter --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-epic-claim-edit-backend ./ehr-pilot-config/charts --install --namespace sutter --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-apprentice-apprentice-video-create:
        title: prod-truman-apprentice-apprentice-video-create
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-create -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-create --values ./ehr-pilot-config/generated_config/apprentice/prod-truman-apprentice-apprentice-video-create.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-create ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/apprentice/prod-truman-apprentice-apprentice-video-create.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-apprentice-apprentice-video-logparser:
        title: prod-truman-apprentice-apprentice-video-logparser
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-logparser -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-logparser --values ./ehr-pilot-config/generated_config/apprentice/prod-truman-apprentice-apprentice-video-logparser.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-logparser ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/apprentice/prod-truman-apprentice-apprentice-video-logparser.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-apprentice-apprentice-video-ingest:
        title: prod-truman-apprentice-apprentice-video-ingest
        commands:
        - VERSION=210324-210302-branch-master
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values apprentice-video-ingest -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service apprentice-video-ingest --values ./ehr-pilot-config/generated_config/apprentice/prod-truman-apprentice-apprentice-video-ingest.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade apprentice-video-ingest ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/apprentice/prod-truman-apprentice-apprentice-video-ingest.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "apprentice" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping:
        title: prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-scraping -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-scraping ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1:
        title: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1
        commands:
        - VERSION=220615-170621-master-513d370
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-writeback1 -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-writeback1 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-writeback1 ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2:
        title: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2
        commands:
        - VERSION=220615-170621-master-513d370
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-writeback2 -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-writeback2 ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3:
        title: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3
        commands:
        - VERSION=220615-170621-master-513d370
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-writeback3 -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-writeback3 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-writeback3 ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4:
        title: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-prior-auth-writeback4 -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-prior-auth-writeback4 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-prior-auth-writeback4 ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping:
        title: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-inpatient-notifications-scraping -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-inpatient-notifications-scraping --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-inpatient-notifications-scraping ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1:
        title: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-inpatient-notifications-writeback1 -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-inpatient-notifications-writeback1 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-inpatient-notifications-writeback1 ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2:
        title: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-inpatient-notifications-writeback2 -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-inpatient-notifications-writeback2 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-inpatient-notifications-writeback2 ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3:
        title: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3
        commands:
        - VERSION=${{VERSION}}
        - 'echo start: $(date +%F_%T)'
        - helm plugin install https://github.com/databus23/helm-diff --version 'v3.4.2'
        - 'get_version=$(helm get values ehr-pilot-inpatient-notifications-writeback3 -n truman | grep ^VERSION: || true)'
        - 'DEPLOYED_VERSION=$(echo $get_version | sed ''s_^VERSION: __'')'
        - if [ $VERSION = 'previousversion' ]; then VERSION=${DEPLOYED_VERSION}; fi
        - SHOULD_DEPLOY=$(bash ./ehr-pilot-config/helm_diff.sh --service ehr-pilot-inpatient-notifications-writeback3 --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3.yml --namespace truman --version_to_use ${VERSION} || true)
        - if [ ${SHOULD_DEPLOY} != 'DIFF_FOUND' ]; then DRY_RUN_FLAG='--dry-run'; else DRY_RUN_FLAG=''; fi
        - 'echo end: $(date +%F_%T)'
        - 'echo get_version: $get_version'
        - 'echo VERSION: $VERSION'
        - 'echo DEPLOYED_VERSION: $DEPLOYED_VERSION'
        - 'echo SHOULD_DEPLOY: $SHOULD_DEPLOY'
        - 'echo DRY_RUN_FLAG: $DRY_RUN_FLAG'
        - helm upgrade ehr-pilot-inpatient-notifications-writeback3 ./ehr-pilot-config/charts --install --namespace truman --values ./ehr-pilot-config/generated_config/ehr-pilot/prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3.yml --set VERSION=$VERSION
        when:
          condition:
            any:
              manual_deploy: '"${{MANUAL_DEPLOY}}" == "true" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
              fixed_branch: '"${{SOURCE_BRANCH}}" == "master" && "${{SOURCE_PROJECT}}" == "ehr-pilot" && steps.deploy_prod_approval.result == "approved"'
  notify_prod:
    title: notify_prod
    stage: notify_prod
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__slack-message-sender__latest
    scale:
      prod-baptist-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-baptist-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-baptist-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-baptist-apprentice-apprentice-video-create
            'on':
            - success
      prod-baptist-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-baptist-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-baptist-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-baptist-apprentice-apprentice-video-create
            'on':
            - failure
      prod-baptist-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-baptist-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-baptist-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-baptist-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-baptist-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-baptist-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-baptist-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-baptist-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-baptist-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-baptist-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-baptist-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-baptist-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-baptist-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-baptist-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-baptist-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-baptist-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-davita-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-davita-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200331-213245-branch-multithreaded-processing to prod-davita-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-davita-apprentice-apprentice-video-create
            'on':
            - success
      prod-davita-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-davita-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200331-213245-branch-multithreaded-processing to prod-davita-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-davita-apprentice-apprentice-video-create
            'on':
            - failure
      prod-davita-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-davita-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200323-221842-branch-multithreaded-processing to prod-davita-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-davita-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-davita-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-davita-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200323-221842-branch-multithreaded-processing to prod-davita-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-davita-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-davita-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-davita-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200323-221842-branch-multithreaded-processing to prod-davita-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-davita-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-davita-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-davita-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200323-221842-branch-multithreaded-processing to prod-davita-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-davita-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-hea-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-hea-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-222316-branch-master to prod-hea-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-apprentice-apprentice-video-create
            'on':
            - success
      prod-hea-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-hea-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-222316-branch-master to prod-hea-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-apprentice-apprentice-video-create
            'on':
            - failure
      prod-hea-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-hea-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-222316-branch-master to prod-hea-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-hea-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-hea-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-222316-branch-master to prod-hea-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-hea-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-hea-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-222316-branch-master to prod-hea-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-hea-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-hea-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-222316-branch-master to prod-hea-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback-success:
        title: notify-slack-prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback
            'on':
            - success
      prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback-failure:
        title: notify-slack-prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hea-ehr-pilot-ehr-pilot-medinfo-writeback
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping2-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-scraping-tasks-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-ingest-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-csv-process-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback2-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback3-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-161201-master-619775c to prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-writeback4-service
            'on':
            - failure
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-success:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service
            'on':
            - success
      prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-failure:
        title: notify-slack-prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-hss-ehr-pilot-ehr-pilot-pb-cs-query-deferred-claims-service
            'on':
            - failure
      prod-medequip-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-medequip-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-medequip-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medequip-apprentice-apprentice-video-create
            'on':
            - success
      prod-medequip-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-medequip-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-medequip-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medequip-apprentice-apprentice-video-create
            'on':
            - failure
      prod-medequip-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-medequip-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-medequip-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medequip-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-medequip-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-medequip-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-medequip-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medequip-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-medequip-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-medequip-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-medequip-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medequip-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-medequip-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-medequip-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-medequip-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medequip-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-medirevvksbh-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-medirevvksbh-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200331-213245-branch-multithreaded-processing to prod-medirevvksbh-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-apprentice-apprentice-video-create
            'on':
            - success
      prod-medirevvksbh-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-medirevvksbh-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200331-213245-branch-multithreaded-processing to prod-medirevvksbh-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-apprentice-apprentice-video-create
            'on':
            - failure
      prod-medirevvksbh-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-medirevvksbh-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200323-221842-branch-multithreaded-processing to prod-medirevvksbh-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-medirevvksbh-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-medirevvksbh-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200323-221842-branch-multithreaded-processing to prod-medirevvksbh-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-medirevvksbh-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-medirevvksbh-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200323-221842-branch-multithreaded-processing to prod-medirevvksbh-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-medirevvksbh-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-medirevvksbh-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200323-221842-branch-multithreaded-processing to prod-medirevvksbh-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-success:
        title: notify-slack-prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback
            'on':
            - success
      prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-failure:
        title: notify-slack-prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-claim-status-writeback
            'on':
            - failure
      prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-success:
        title: notify-slack-prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220509-181534-av-medirevv-oa23-service-a5e3a5e to prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment
            'on':
            - success
      prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-failure:
        title: notify-slack-prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220509-181534-av-medirevv-oa23-service-a5e3a5e to prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-ehr-pilot-ehr-pilot-medirevvksbh-oa23-denial-adjustment
            'on':
            - failure
      prod-medirevvksbh-ehr-pilot-claim-edits-success:
        title: notify-slack-prod-medirevvksbh-ehr-pilot-claim-edits-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-medirevvksbh-ehr-pilot-claim-edits ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-ehr-pilot-claim-edits
            'on':
            - success
      prod-medirevvksbh-ehr-pilot-claim-edits-failure:
        title: notify-slack-prod-medirevvksbh-ehr-pilot-claim-edits-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-medirevvksbh-ehr-pilot-claim-edits ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-medirevvksbh-ehr-pilot-claim-edits
            'on':
            - failure
      prod-methodist-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-methodist-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-create
            'on':
            - success
      prod-methodist-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-methodist-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-create
            'on':
            - failure
      prod-methodist-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-methodist-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-methodist-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-methodist-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-methodist-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200323-221842-branch-multithreaded-processing to prod-methodist-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-methodist-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200323-221842-branch-multithreaded-processing to prod-methodist-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-methodist-apprentice-apprentice-video-create-internal-success:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-create-internal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-215106-branch-master to prod-methodist-apprentice-apprentice-video-create-internal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-create-internal
            'on':
            - success
      prod-methodist-apprentice-apprentice-video-create-internal-failure:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-create-internal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-215106-branch-master to prod-methodist-apprentice-apprentice-video-create-internal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-create-internal
            'on':
            - failure
      prod-methodist-apprentice-apprentice-video-logparser-internal-success:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-logparser-internal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-222316-branch-master to prod-methodist-apprentice-apprentice-video-logparser-internal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-logparser-internal
            'on':
            - success
      prod-methodist-apprentice-apprentice-video-logparser-internal-failure:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-logparser-internal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-222316-branch-master to prod-methodist-apprentice-apprentice-video-logparser-internal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-logparser-internal
            'on':
            - failure
      prod-methodist-apprentice-apprentice-video-ingest-internal-success:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-ingest-internal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-215106-branch-master to prod-methodist-apprentice-apprentice-video-ingest-internal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-ingest-internal
            'on':
            - success
      prod-methodist-apprentice-apprentice-video-ingest-internal-failure:
        title: notify-slack-prod-methodist-apprentice-apprentice-video-ingest-internal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-215106-branch-master to prod-methodist-apprentice-apprentice-video-ingest-internal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-apprentice-apprentice-video-ingest-internal
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-173300-ms-auth-apprentice-28254d3 to prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-173300-ms-auth-apprentice-28254d3 to prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220616-173300-ms-auth-apprentice-28254d3 to prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220616-173300-ms-auth-apprentice-28254d3 to prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping2
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220406-213610-ms-auth-apprentice-529f4b5 to prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220406-213610-ms-auth-apprentice-529f4b5 to prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-booking-scraping-tasks
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-metrics
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220408-213638-cerner-patient-account-hotfix-62ad858 to prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220408-213638-cerner-patient-account-hotfix-62ad858 to prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220408-213638-cerner-patient-account-hotfix-62ad858 to prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220408-213638-cerner-patient-account-hotfix-62ad858 to prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-scraping2
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220414-212418-master-b697d5d to prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220414-212418-master-b697d5d to prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220414-212418-master-b697d5d to prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220414-212418-master-b697d5d to prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-writeback2
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-claim-status-scraping-tasks
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-newborn-timely
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-physician
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status2-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status2
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status2-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status2
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status3-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status3
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status3-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status3
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status4-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status4
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status4-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status4
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status5-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status5
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status5-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status5
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status6-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status6-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status6 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status6
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status6-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status6-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status6 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status6
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status7-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status7-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status7 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status7
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status7-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status7-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status7 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status7
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-auth-status8-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status8-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status8 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status8
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-auth-status8-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-auth-status8-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220617-183929-ms-auth-apprentice-59072a0 to prod-methodist-ehr-pilot-ehr-pilot-auth-status8 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-auth-status8
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220421-164358-gv-rqa-baseline-7ee517b to prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220421-164358-gv-rqa-baseline-7ee517b to prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-scraping
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220223-233444-gv-rqa-baseline-42b1ec4 to prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220223-233444-gv-rqa-baseline-42b1ec4 to prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-rqa-edit-task-processing
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reg
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-scraping-reimbursement
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-eligibility-denials-task-creation-reg2
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=latest-jw-mhs-denials-updates to prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-elig-denials-create-task-reimburse2
            'on':
            - failure
      prod-methodist-ehr-pilot-rqa-alerts-success:
        title: notify-slack-prod-methodist-ehr-pilot-rqa-alerts-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220614-204909-ms-rqa-add-discharge-status-1c38c22 to prod-methodist-ehr-pilot-rqa-alerts ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-rqa-alerts
            'on':
            - success
      prod-methodist-ehr-pilot-rqa-alerts-failure:
        title: notify-slack-prod-methodist-ehr-pilot-rqa-alerts-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220614-204909-ms-rqa-add-discharge-status-1c38c22 to prod-methodist-ehr-pilot-rqa-alerts ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-rqa-alerts
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-queue-monitoring
            'on':
            - failure
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal-success:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal
            'on':
            - success
      prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal-failure:
        title: notify-slack-prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-methodist-ehr-pilot-ehr-pilot-cerner-mid-cycle-edits-prenatal
            'on':
            - failure
      prod-moffitt-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-moffitt-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-222316-branch-master to prod-moffitt-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-apprentice-apprentice-video-create
            'on':
            - success
      prod-moffitt-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-moffitt-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-222316-branch-master to prod-moffitt-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-apprentice-apprentice-video-create
            'on':
            - failure
      prod-moffitt-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-moffitt-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-222316-branch-master to prod-moffitt-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-moffitt-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-moffitt-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-222316-branch-master to prod-moffitt-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-moffitt-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-moffitt-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210108-222316-branch-master to prod-moffitt-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-moffitt-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-moffitt-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210108-222316-branch-master to prod-moffitt-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-success:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback
            'on':
            - success
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-failure:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback
            'on':
            - failure
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-success:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2
            'on':
            - success
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-failure:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback2
            'on':
            - failure
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3-success:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3
            'on':
            - success
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3-failure:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback3
            'on':
            - failure
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4-success:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4
            'on':
            - success
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4-failure:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback4
            'on':
            - failure
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5-success:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5
            'on':
            - success
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5-failure:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback5
            'on':
            - failure
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6-success:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6
            'on':
            - success
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6-failure:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback6
            'on':
            - failure
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7-success:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7
            'on':
            - success
      prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7-failure:
        title: notify-slack-prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-moffitt-ehr-pilot-ehr-pilot-soarian-claim-status-writeback7
            'on':
            - failure
      prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-success:
        title: notify-slack-prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback
            'on':
            - success
      prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-failure:
        title: notify-slack-prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-montage-ehr-pilot-ehr-pilot-montage-claim-status-csv-writeback
            'on':
            - failure
      prod-montage-ehr-pilot-auth-status-success:
        title: notify-slack-prod-montage-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220602-230858-master-df185ab to prod-montage-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-montage-ehr-pilot-auth-status
            'on':
            - success
      prod-montage-ehr-pilot-auth-status-failure:
        title: notify-slack-prod-montage-ehr-pilot-auth-status-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220602-230858-master-df185ab to prod-montage-ehr-pilot-auth-status ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-montage-ehr-pilot-auth-status
            'on':
            - failure
      prod-optumdignity-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-optumdignity-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-optumdignity-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-optumdignity-apprentice-apprentice-video-create
            'on':
            - success
      prod-optumdignity-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-optumdignity-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-optumdignity-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-optumdignity-apprentice-apprentice-video-create
            'on':
            - failure
      prod-optumdignity-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-optumdignity-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-optumdignity-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-optumdignity-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-optumdignity-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-optumdignity-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-optumdignity-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-optumdignity-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-optumdignity-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-optumdignity-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-optumdignity-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-optumdignity-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-optumdignity-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-optumdignity-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-optumdignity-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-optumdignity-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-parallonhca-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-parallonhca-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=201105-223329-branch-master to prod-parallonhca-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-apprentice-apprentice-video-create
            'on':
            - success
      prod-parallonhca-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-parallonhca-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=201105-223329-branch-master to prod-parallonhca-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-apprentice-apprentice-video-create
            'on':
            - failure
      prod-parallonhca-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-parallonhca-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=201105-223329-branch-master to prod-parallonhca-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-parallonhca-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-parallonhca-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=201105-223329-branch-master to prod-parallonhca-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-parallonhca-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-parallonhca-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=201105-223329-branch-master to prod-parallonhca-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-parallonhca-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-parallonhca-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=201105-223329-branch-master to prod-parallonhca-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-scraping-tasks
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-ingest
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-csv-processing
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback2
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback3
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback4
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback5
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback6
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback7
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback8
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback9
            'on':
            - failure
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10-success:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10
            'on':
            - success
      prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10-failure:
        title: notify-slack-prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-parallonhca-ehr-pilot-ehr-pilot-artiva-claim-status-writeback10
            'on':
            - failure
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-success:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval
            'on':
            - success
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-failure:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval
            'on':
            - failure
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2-success:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2
            'on':
            - success
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2-failure:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval2
            'on':
            - failure
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3-success:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3
            'on':
            - success
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3-failure:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval3
            'on':
            - failure
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4-success:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4
            'on':
            - success
      prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4-failure:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-centricity-charge-retrieval4
            'on':
            - failure
      prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-success:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks
            'on':
            - success
      prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-failure:
        title: notify-slack-prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pennhighlands-ehr-pilot-ehr-pilot-create-charge-retrieval-tasks
            'on':
            - failure
      prod-pmscvmc-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-pmscvmc-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-pmscvmc-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmscvmc-apprentice-apprentice-video-create
            'on':
            - success
      prod-pmscvmc-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-pmscvmc-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-pmscvmc-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmscvmc-apprentice-apprentice-video-create
            'on':
            - failure
      prod-pmscvmc-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-pmscvmc-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-pmscvmc-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmscvmc-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-pmscvmc-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-pmscvmc-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-pmscvmc-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmscvmc-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-pmscvmc-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-pmscvmc-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-pmscvmc-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmscvmc-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-pmscvmc-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-pmscvmc-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-pmscvmc-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmscvmc-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-pmskaiser-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-pmskaiser-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200331-213245-branch-multithreaded-processing to prod-pmskaiser-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmskaiser-apprentice-apprentice-video-create
            'on':
            - success
      prod-pmskaiser-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-pmskaiser-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200331-213245-branch-multithreaded-processing to prod-pmskaiser-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmskaiser-apprentice-apprentice-video-create
            'on':
            - failure
      prod-pmskaiser-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-pmskaiser-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200323-221842-branch-multithreaded-processing to prod-pmskaiser-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmskaiser-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-pmskaiser-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-pmskaiser-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200323-221842-branch-multithreaded-processing to prod-pmskaiser-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmskaiser-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-pmskaiser-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-pmskaiser-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=200323-221842-branch-multithreaded-processing to prod-pmskaiser-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmskaiser-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-pmskaiser-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-pmskaiser-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=200323-221842-branch-multithreaded-processing to prod-pmskaiser-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmskaiser-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-pmsohiostate-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-pmsohiostate-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-pmsohiostate-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmsohiostate-apprentice-apprentice-video-create
            'on':
            - success
      prod-pmsohiostate-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-pmsohiostate-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-pmsohiostate-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmsohiostate-apprentice-apprentice-video-create
            'on':
            - failure
      prod-pmsohiostate-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-pmsohiostate-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-pmsohiostate-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmsohiostate-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-pmsohiostate-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-pmsohiostate-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-pmsohiostate-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmsohiostate-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-pmsohiostate-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-pmsohiostate-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-pmsohiostate-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmsohiostate-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-pmsohiostate-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-pmsohiostate-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-pmsohiostate-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-pmsohiostate-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-shared-ehr-pilot-ehr-pilot-queue-monitor-success:
        title: notify-slack-prod-shared-ehr-pilot-ehr-pilot-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-shared-ehr-pilot-ehr-pilot-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-ehr-pilot-queue-monitor
            'on':
            - success
      prod-shared-ehr-pilot-ehr-pilot-queue-monitor-failure:
        title: notify-slack-prod-shared-ehr-pilot-ehr-pilot-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-shared-ehr-pilot-ehr-pilot-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-ehr-pilot-queue-monitor
            'on':
            - failure
      prod-shared-ehr-pilot-ehr-pilot-machine-manager-success:
        title: notify-slack-prod-shared-ehr-pilot-ehr-pilot-machine-manager-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-shared-ehr-pilot-ehr-pilot-machine-manager ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-ehr-pilot-machine-manager
            'on':
            - success
      prod-shared-ehr-pilot-ehr-pilot-machine-manager-failure:
        title: notify-slack-prod-shared-ehr-pilot-ehr-pilot-machine-manager-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-shared-ehr-pilot-ehr-pilot-machine-manager ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-ehr-pilot-machine-manager
            'on':
            - failure
      prod-shared-ehr-pilot-ehr-pilot-rpc-api-success:
        title: notify-slack-prod-shared-ehr-pilot-ehr-pilot-rpc-api-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-shared-ehr-pilot-ehr-pilot-rpc-api ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-ehr-pilot-rpc-api
            'on':
            - success
      prod-shared-ehr-pilot-ehr-pilot-rpc-api-failure:
        title: notify-slack-prod-shared-ehr-pilot-ehr-pilot-rpc-api-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-shared-ehr-pilot-ehr-pilot-rpc-api ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-ehr-pilot-rpc-api
            'on':
            - failure
      prod-shared-ehr-pilot-workflow-queue-monitor-success:
        title: notify-slack-prod-shared-ehr-pilot-workflow-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-shared-ehr-pilot-workflow-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-workflow-queue-monitor
            'on':
            - success
      prod-shared-ehr-pilot-workflow-queue-monitor-failure:
        title: notify-slack-prod-shared-ehr-pilot-workflow-queue-monitor-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-shared-ehr-pilot-workflow-queue-monitor ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-shared-ehr-pilot-workflow-queue-monitor
            'on':
            - failure
      prod-signature-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-signature-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-signature-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-signature-apprentice-apprentice-video-create
            'on':
            - success
      prod-signature-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-signature-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-signature-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-signature-apprentice-apprentice-video-create
            'on':
            - failure
      prod-signature-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-signature-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-signature-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-signature-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-signature-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-signature-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-signature-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-signature-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-signature-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-signature-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-signature-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-signature-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-signature-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-signature-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-signature-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-signature-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback2
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback3
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-writeback5
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-ingest
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-status-csv-processing
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-metrics
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-queue-transfer
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220615-181130-blt-claim-edits-asynciofix-9c1d821 to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220615-181130-blt-claim-edits-asynciofix-9c1d821 to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-frontend
            'on':
            - failure
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend-success:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220615-181130-blt-claim-edits-asynciofix-9c1d821 to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend
            'on':
            - success
      prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend-failure:
        title: notify-slack-prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220615-181130-blt-claim-edits-asynciofix-9c1d821 to prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-sutter-ehr-pilot-ehr-pilot-epic-claim-edit-backend
            'on':
            - failure
      prod-truman-apprentice-apprentice-video-create-success:
        title: notify-slack-prod-truman-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-truman-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-apprentice-apprentice-video-create
            'on':
            - success
      prod-truman-apprentice-apprentice-video-create-failure:
        title: notify-slack-prod-truman-apprentice-apprentice-video-create-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-truman-apprentice-apprentice-video-create ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-apprentice-apprentice-video-create
            'on':
            - failure
      prod-truman-apprentice-apprentice-video-logparser-success:
        title: notify-slack-prod-truman-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-truman-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-apprentice-apprentice-video-logparser
            'on':
            - success
      prod-truman-apprentice-apprentice-video-logparser-failure:
        title: notify-slack-prod-truman-apprentice-apprentice-video-logparser-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-truman-apprentice-apprentice-video-logparser ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-apprentice-apprentice-video-logparser
            'on':
            - failure
      prod-truman-apprentice-apprentice-video-ingest-success:
        title: notify-slack-prod-truman-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=210324-210302-branch-master to prod-truman-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-apprentice-apprentice-video-ingest
            'on':
            - success
      prod-truman-apprentice-apprentice-video-ingest-failure:
        title: notify-slack-prod-truman-apprentice-apprentice-video-ingest-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=210324-210302-branch-master to prod-truman-apprentice-apprentice-video-ingest ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-apprentice-apprentice-video-ingest
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-scraping
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220615-170621-master-513d370 to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220615-170621-master-513d370 to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback1
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220615-170621-master-513d370 to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220615-170621-master-513d370 to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback2
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=220615-170621-master-513d370 to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=220615-170621-master-513d370 to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback3
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-prior-auth-writeback4
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-scraping
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback1
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback2
            'on':
            - failure
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3-success:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: deployed VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3
            'on':
            - success
      prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3-failure:
        title: notify-slack-prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3-success
        arguments:
          WEBHOOK_URL: https://hooks.slack.com/services/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
          MESSAGE: FAILED TO DEPLOY VERSION=${{VERSION}} to prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3 ${{CF_BUILD_URL}}
        when:
          steps:
          - name: prod-truman-ehr-pilot-ehr-pilot-inpatient-notifications-writeback3
            'on':
            - failure
  delete_unused_prod:
    title: delete_unused_prod
    stage: delete_unused_prod
    image: 025412125743.dkr.ecr.us-west-2.amazonaws.com/dockerhub:codefresh__cfstep-helm__3.3.1
    environment:
    - 'EXCLUDE_LIVE_SERVICES=| select(.name != "apprentice-video-create" or .namespace != "baptist") | select(.name != "apprentice-video-logparser" or .namespace != "baptist") | select(.name != "apprentice-video-ingest" or .namespace != "baptist") | select(.name != "apprentice-video-create" or .namespace != "davita") | select(.name != "apprentice-video-logparser" or .namespace != "davita") | select(.name != "apprentice-video-ingest" or .namespace != "davita") | select(.name != "apprentice-video-create" or .namespace != "hea") | select(.name != "apprentice-video-logparser" or .namespace != "hea") | select(.name != "apprentice-video-ingest" or .namespace != "hea") | select(.name != "ehr-pilot-medinfo-writeback" or .namespace != "hea") | select(.name != "ehr-pilot-pb-cs-scraping-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-scraping2-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-scraping-tasks-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-csv-ingest-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-csv-process-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-writeback-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-writeback2-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-writeback3-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-writeback4-service" or .namespace != "hss") | select(.name != "ehr-pilot-pb-cs-query-deferred-claims-service" or .namespace != "hss") | select(.name != "apprentice-video-create" or .namespace != "medequip") | select(.name != "apprentice-video-logparser" or .namespace != "medequip") | select(.name != "apprentice-video-ingest" or .namespace != "medequip") | select(.name != "apprentice-video-create" or .namespace != "medirevvksbh") | select(.name != "apprentice-video-logparser" or .namespace != "medirevvksbh") | select(.name != "apprentice-video-ingest" or .namespace != "medirevvksbh") | select(.name != "ehr-pilot-medirevvksbh-claim-status-writeback" or .namespace != "medirevvksbh") | select(.name != "ehr-pilot-medirevvksbh-oa23-denial-adjustment" or .namespace != "medirevvksbh") | select(.name != "claim-edits" or .namespace != "medirevvksbh") | select(.name != "apprentice-video-create" or .namespace != "methodist") | select(.name != "apprentice-video-logparser" or .namespace != "methodist") | select(.name != "apprentice-video-ingest" or .namespace != "methodist") | select(.name != "apprentice-video-create-internal" or .namespace != "methodist") | select(.name != "apprentice-video-logparser-internal" or .namespace != "methodist") | select(.name != "apprentice-video-ingest-internal" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-booking-scraping" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-booking-scraping2" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-booking-scraping-tasks" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-metrics" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-scraping" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-scraping2" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-writeback" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-writeback2" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-claim-status-scraping-tasks" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-mid-cycle-edits-newborn-timely" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-mid-cycle-edits-physician" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-status" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-status2" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-status3" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-status4" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-status5" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-status6" or .namespace != "methodist")
      | select(.name != "ehr-pilot-auth-status7" or .namespace != "methodist") | select(.name != "ehr-pilot-auth-status8" or .namespace != "methodist") | select(.name != "ehr-pilot-rqa-edit-scraping" or .namespace != "methodist") | select(.name != "ehr-pilot-rqa-edit-task-processing" or .namespace != "methodist") | select(.name != "ehr-pilot-eligibility-denials-scraping-reg" or .namespace != "methodist") | select(.name != "ehr-pilot-eligibility-denials-scraping-reimbursement" or .namespace != "methodist") | select(.name != "ehr-pilot-eligibility-denials-task-creation-reg" or .namespace != "methodist") | select(.name != "ehr-pilot-eligibility-denials-task-creation-reg2" or .namespace != "methodist") | select(.name != "ehr-pilot-elig-denials-create-task-reimburse" or .namespace != "methodist") | select(.name != "ehr-pilot-elig-denials-create-task-reimburse2" or .namespace != "methodist") | select(.name != "rqa-alerts" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-queue-monitoring" or .namespace != "methodist") | select(.name != "ehr-pilot-cerner-mid-cycle-edits-prenatal" or .namespace != "methodist") | select(.name != "apprentice-video-create" or .namespace != "moffitt") | select(.name != "apprentice-video-logparser" or .namespace != "moffitt") | select(.name != "apprentice-video-ingest" or .namespace != "moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback" or .namespace != "moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback2" or .namespace != "moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback3" or .namespace != "moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback4" or .namespace != "moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback5" or .namespace != "moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback6" or .namespace != "moffitt") | select(.name != "ehr-pilot-soarian-claim-status-writeback7" or .namespace != "moffitt") | select(.name != "ehr-pilot-montage-claim-status-csv-writeback" or .namespace != "montage") | select(.name != "auth-status" or .namespace != "montage") | select(.name != "apprentice-video-create" or .namespace != "optumdignity") | select(.name != "apprentice-video-logparser" or .namespace != "optumdignity") | select(.name != "apprentice-video-ingest" or .namespace != "optumdignity") | select(.name != "apprentice-video-create" or .namespace != "parallonhca") | select(.name != "apprentice-video-logparser" or .namespace != "parallonhca") | select(.name != "apprentice-video-ingest" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-scraping" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-scraping-tasks" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-csv-ingest" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-csv-processing" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback2" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback3" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback4" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback5" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback6" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback7" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback8" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback9" or .namespace != "parallonhca") | select(.name != "ehr-pilot-artiva-claim-status-writeback10" or .namespace != "parallonhca") | select(.name != "ehr-pilot-centricity-charge-retrieval" or .namespace != "pennhighlands") | select(.name != "ehr-pilot-centricity-charge-retrieval2" or .namespace != "pennhighlands") | select(.name
      != "ehr-pilot-centricity-charge-retrieval3" or .namespace != "pennhighlands") | select(.name != "ehr-pilot-centricity-charge-retrieval4" or .namespace != "pennhighlands") | select(.name != "ehr-pilot-create-charge-retrieval-tasks" or .namespace != "pennhighlands") | select(.name != "apprentice-video-create" or .namespace != "pmscvmc") | select(.name != "apprentice-video-logparser" or .namespace != "pmscvmc") | select(.name != "apprentice-video-ingest" or .namespace != "pmscvmc") | select(.name != "apprentice-video-create" or .namespace != "pmskaiser") | select(.name != "apprentice-video-logparser" or .namespace != "pmskaiser") | select(.name != "apprentice-video-ingest" or .namespace != "pmskaiser") | select(.name != "apprentice-video-create" or .namespace != "pmsohiostate") | select(.name != "apprentice-video-logparser" or .namespace != "pmsohiostate") | select(.name != "apprentice-video-ingest" or .namespace != "pmsohiostate") | select(.name != "ehr-pilot-queue-monitor" or .namespace != "shared") | select(.name != "ehr-pilot-machine-manager" or .namespace != "shared") | select(.name != "ehr-pilot-rpc-api" or .namespace != "shared") | select(.name != "workflow-queue-monitor" or .namespace != "shared") | select(.name != "apprentice-video-create" or .namespace != "signature") | select(.name != "apprentice-video-logparser" or .namespace != "signature") | select(.name != "apprentice-video-ingest" or .namespace != "signature") | select(.name != "ehr-pilot-epic-claim-status-writeback" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-status-writeback2" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-status-writeback3" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-status-writeback5" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-status-csv-ingest" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-status-csv-processing" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-edit-metrics" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-edit-queue-transfer" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-edit-frontend" or .namespace != "sutter") | select(.name != "ehr-pilot-epic-claim-edit-backend" or .namespace != "sutter") | select(.name != "apprentice-video-create" or .namespace != "truman") | select(.name != "apprentice-video-logparser" or .namespace != "truman") | select(.name != "apprentice-video-ingest" or .namespace != "truman") | select(.name != "ehr-pilot-prior-auth-scraping" or .namespace != "truman") | select(.name != "ehr-pilot-prior-auth-writeback1" or .namespace != "truman") | select(.name != "ehr-pilot-prior-auth-writeback2" or .namespace != "truman") | select(.name != "ehr-pilot-prior-auth-writeback3" or .namespace != "truman") | select(.name != "ehr-pilot-prior-auth-writeback4" or .namespace != "truman") | select(.name != "ehr-pilot-inpatient-notifications-scraping" or .namespace != "truman") | select(.name != "ehr-pilot-inpatient-notifications-writeback1" or .namespace != "truman") | select(.name != "ehr-pilot-inpatient-notifications-writeback2" or .namespace != "truman") | select(.name != "ehr-pilot-inpatient-notifications-writeback3" or .namespace != "truman") '
    commands:
    - kubectl config use-context prod
    - helm list -A -o json | jq ".[] | select(.chart == \"kolony-0.1.0\") $EXCLUDE_LIVE_SERVICES | \"helm delete --namespace=\(.namespace) \(.name)\"" -r > delete.sh
    - cat delete.sh
